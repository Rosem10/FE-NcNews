{"ast":null,"code":"var _jsxFileName = \"/Users/rosemullan/Desktop/NorthCoders/Front-End/fe-nc-news-1/src/Components/CommentFetcher.jsx\";\nimport React, { Component } from \"react\";\nimport * as api from \"./Api\";\nimport Loading from \"./Loading\";\nimport CommentCard from \"./CommentCard\";\nimport CommentAdder from \"./CommentAdder\";\n\nclass CommentFetcher extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      comments: [],\n      isLoading: true\n    };\n\n    this.submitComment = comment => {\n      this.setState(currentState => {\n        const comments = [comment, ...currentState.comments];\n        return currentState.comments = comments;\n      });\n    };\n\n    this.removeComment = id => {\n      this.setState(currentState => {\n        const filtered = currentState.comments.filter(comment => {\n          return comment.comment_id !== id;\n        });\n        return {\n          comments: filtered\n        };\n      });\n    };\n  }\n\n  componentDidMount() {\n    const articleId = this.props.articleId;\n    api.getArticleComments(articleId).then(res => this.setState({\n      comments: res.data.comments,\n      isLoading: false\n    })).then(err => {});\n  }\n\n  render() {\n    if (this.state.isLoading === true) {\n      return React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      });\n    }\n\n    const articleId = this.props.articleId;\n    return React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Comments: \"), React.createElement(CommentAdder, {\n      user: this.props.user,\n      submitComment: this.submitComment,\n      articleId: articleId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), this.state.comments.map(comment => React.createElement(\"li\", {\n      key: comment.comment_id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(CommentCard, {\n      articleId: articleId,\n      comment: comment,\n      user: this.props.user,\n      removeComment: this.removeComment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default CommentFetcher;","map":{"version":3,"sources":["/Users/rosemullan/Desktop/NorthCoders/Front-End/fe-nc-news-1/src/Components/CommentFetcher.jsx"],"names":["React","Component","api","Loading","CommentCard","CommentAdder","CommentFetcher","state","comments","isLoading","submitComment","comment","setState","currentState","removeComment","id","filtered","filter","comment_id","componentDidMount","articleId","props","getArticleComments","then","res","data","err","render","user","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,KAAKC,GAAZ,MAAqB,OAArB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,cAAN,SAA6BL,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACrCM,KADqC,GAC7B;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,SAAS,EAAE;AAFL,KAD6B;;AAAA,SAerCC,aAfqC,GAerBC,OAAO,IAAI;AACzB,WAAKC,QAAL,CAAcC,YAAY,IAAI;AAC5B,cAAML,QAAQ,GAAG,CAACG,OAAD,EAAU,GAAGE,YAAY,CAACL,QAA1B,CAAjB;AACA,eAAQK,YAAY,CAACL,QAAb,GAAwBA,QAAhC;AACD,OAHD;AAID,KApBoC;;AAAA,SAqBrCM,aArBqC,GAqBrBC,EAAE,IAAI;AACpB,WAAKH,QAAL,CAAcC,YAAY,IAAI;AAC5B,cAAMG,QAAQ,GAAGH,YAAY,CAACL,QAAb,CAAsBS,MAAtB,CAA6BN,OAAO,IAAI;AACvD,iBAAOA,OAAO,CAACO,UAAR,KAAuBH,EAA9B;AACD,SAFgB,CAAjB;AAGA,eAAO;AAAEP,UAAAA,QAAQ,EAAEQ;AAAZ,SAAP;AACD,OALD;AAMD,KA5BoC;AAAA;;AAMrCG,EAAAA,iBAAiB,GAAG;AAAA,UACVC,SADU,GACI,KAAKC,KADT,CACVD,SADU;AAElBlB,IAAAA,GAAG,CACAoB,kBADH,CACsBF,SADtB,EAEGG,IAFH,CAEQC,GAAG,IACP,KAAKZ,QAAL,CAAc;AAAEJ,MAAAA,QAAQ,EAAEgB,GAAG,CAACC,IAAJ,CAASjB,QAArB;AAA+BC,MAAAA,SAAS,EAAE;AAA1C,KAAd,CAHJ,EAIIc,IAJJ,CAIUG,GAAD,IAAO,CAAE,CAJlB;AAKD;;AAiBDC,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKpB,KAAL,CAAWE,SAAX,KAAyB,IAA7B,EAAmC;AACjC,aAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAHM,UAICW,SAJD,GAIe,KAAKC,KAJpB,CAICD,SAJD;AAMP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE,oBAAC,YAAD;AACE,MAAA,IAAI,EAAE,KAAKC,KAAL,CAAWO,IADnB;AAEE,MAAA,aAAa,EAAE,KAAKlB,aAFtB;AAGE,MAAA,SAAS,EAAEU,SAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAOG,KAAKb,KAAL,CAAWC,QAAX,CAAoBqB,GAApB,CAAwBlB,OAAO,IAC9B;AAAI,MAAA,GAAG,EAAEA,OAAO,CAACO,UAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AACE,MAAA,SAAS,EAAEE,SADb;AAEE,MAAA,OAAO,EAAET,OAFX;AAGE,MAAA,IAAI,EAAE,KAAKU,KAAL,CAAWO,IAHnB;AAIE,MAAA,aAAa,EAAE,KAAKd,aAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADD,CAPH,CADF;AAoBD;;AAxDoC;;AA2DvC,eAAeR,cAAf","sourcesContent":["import React, { Component } from \"react\";\nimport * as api from \"./Api\";\nimport Loading from \"./Loading\";\nimport CommentCard from \"./CommentCard\";\nimport CommentAdder from \"./CommentAdder\";\n\nclass CommentFetcher extends Component {\n  state = {\n    comments: [],\n    isLoading: true\n  };\n\n  componentDidMount() {\n    const { articleId } = this.props;\n    api\n      .getArticleComments(articleId)\n      .then(res =>\n        this.setState({ comments: res.data.comments, isLoading: false })\n      ).then((err)=>{})\n  }\n\n  submitComment = comment => {\n    this.setState(currentState => {\n      const comments = [comment, ...currentState.comments];\n      return (currentState.comments = comments);\n    });\n  };\n  removeComment = id => {\n    this.setState(currentState => {\n      const filtered = currentState.comments.filter(comment => {\n        return comment.comment_id !== id;\n      });\n      return { comments: filtered };\n    });\n  };\n\n  render() {\n    if (this.state.isLoading === true) {\n      return <Loading />;\n    }\n    const { articleId } = this.props;\n\n    return (\n      <ul>\n        <h2>Comments: </h2>\n        <CommentAdder\n          user={this.props.user}\n          submitComment={this.submitComment}\n          articleId={articleId}\n        />\n        {this.state.comments.map(comment => (\n          <li key={comment.comment_id}>\n            <CommentCard\n              articleId={articleId}\n              comment={comment}\n              user={this.props.user}\n              removeComment={this.removeComment}\n            />\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nexport default CommentFetcher;\n"]},"metadata":{},"sourceType":"module"}