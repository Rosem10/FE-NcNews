{"ast":null,"code":"var _jsxFileName = \"/Users/rosemullan/Desktop/NorthCoders/Front-End/fe-nc-news-1/src/Components/ArticlesByTopic.jsx\";\nimport React, { Component } from \"react\";\nimport { getArticles } from \"./Api\";\nimport ArticlesList from \"./ArticlesList\";\nimport Loading from \"./Loading\";\nexport default class ArticlesByTopic extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      articles: [],\n      isLoading: true\n    };\n  }\n\n  componentDidMount() {\n    const topic = this.props.topic;\n    getArticles(topic).then(res => this.setState({\n      articles: res.data.articles,\n      isLoading: false\n    }));\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.topic !== this.props.topic) {\n      const topic = this.props.topic;\n      getArticles(topic).then(res => {\n        this.setState({\n          articles: res.data.articles\n        });\n      });\n    }\n  }\n\n  render() {\n    if (this.state.isLoading === true) {\n      return React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      });\n    }\n\n    const articles = this.state.articles;\n    const topic = this.state.topic;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, `Here's all our articles on ${topic}`), React.createElement(ArticlesList, {\n      articles: articles,\n      topic: topic,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/rosemullan/Desktop/NorthCoders/Front-End/fe-nc-news-1/src/Components/ArticlesByTopic.jsx"],"names":["React","Component","getArticles","ArticlesList","Loading","ArticlesByTopic","state","articles","isLoading","componentDidMount","topic","props","then","res","setState","data","componentDidUpdate","prevProps","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA,eAAe,MAAMC,eAAN,SAA8BJ,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACrDK,KADqD,GAC7C;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,SAAS,EAAE;AAFL,KAD6C;AAAA;;AAKrDC,EAAAA,iBAAiB,GAAG;AAAA,UACVC,KADU,GACA,KAAKC,KADL,CACVD,KADU;AAElBR,IAAAA,WAAW,CAACQ,KAAD,CAAX,CAAmBE,IAAnB,CAAwBC,GAAG,IACzB,KAAKC,QAAL,CAAc;AAAEP,MAAAA,QAAQ,EAAEM,GAAG,CAACE,IAAJ,CAASR,QAArB;AAA+BC,MAAAA,SAAS,EAAE;AAA1C,KAAd,CADF;AAGD;;AAEDQ,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,QAAIA,SAAS,CAACP,KAAV,KAAoB,KAAKC,KAAL,CAAWD,KAAnC,EAA0C;AAAA,YAChCA,KADgC,GACtB,KAAKC,KADiB,CAChCD,KADgC;AAExCR,MAAAA,WAAW,CAACQ,KAAD,CAAX,CAAmBE,IAAnB,CAAwBC,GAAG,IAAI;AAC7B,aAAKC,QAAL,CAAc;AAACP,UAAAA,QAAQ,EAAEM,GAAG,CAACE,IAAJ,CAASR;AAApB,SAAd;AACD,OAFD;AAGD;AACF;;AAEDW,EAAAA,MAAM,GAAG;AACP,QAAG,KAAKZ,KAAL,CAAWE,SAAX,KAAyB,IAA5B,EAAiC;AAC/B,aAAO,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AAHM,UAKCD,QALD,GAKc,KAAKD,KALnB,CAKCC,QALD;AAAA,UAMCG,KAND,GAMW,KAAKJ,KANhB,CAMCI,KAND;AAOP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,8BAA6BA,KAAM,EAAzC,CADF,EAEE,oBAAC,YAAD;AAAc,MAAA,QAAQ,EAAEH,QAAxB;AAAkC,MAAA,KAAK,EAAEG,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AAlCoD","sourcesContent":["import React, { Component } from \"react\";\nimport { getArticles } from \"./Api\";\nimport ArticlesList from \"./ArticlesList\";\nimport Loading from \"./Loading\"\n\nexport default class ArticlesByTopic extends Component {\n  state = {\n    articles: [],\n    isLoading: true\n  };\n  componentDidMount() {\n    const { topic } = this.props;\n    getArticles(topic).then(res =>\n      this.setState({ articles: res.data.articles, isLoading: false })\n    );\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.topic !== this.props.topic) {\n      const { topic } = this.props;\n      getArticles(topic).then(res => {\n        this.setState({articles: res.data.articles});\n      });\n    }\n  }\n\n  render() {\n    if(this.state.isLoading === true){\n      return <Loading/>\n    }\n\n    const { articles } = this.state;\n    const { topic } = this.state;\n    return (\n      <div>\n        <h2>{`Here's all our articles on ${topic}`}</h2>\n        <ArticlesList articles={articles} topic={topic} />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}