{"ast":null,"code":"var _jsxFileName = \"/Users/rosemullan/Desktop/NorthCoders/Front-End/fe-nc-news-1/src/Components/CommentFetcher.jsx\";\nimport React, { Component } from \"react\";\nimport * as api from \"./Api\";\nimport Loading from \"./Loading\";\nimport CommentCard from \"./CommentCard\";\nimport CommentAdder from \"./CommentAdder\";\n\nclass CommentFetcher extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      comments: [],\n      isLoading: true\n    };\n\n    this.submitComment = comment => {\n      const created_at = new Date().toDateString;\n      this.setState(currentState => {\n        const newComment = {\n          comment_id: 0,\n          author: comment.username,\n          article_id: this.props.article_id,\n          votes: 0,\n          created_at,\n          body: comment.body\n        };\n        return {\n          comments: [newComment, ...currentState.comments]\n        };\n      });\n    };\n\n    this.removeComment = id => {\n      this.setState(currentState => {\n        const filtered = currentState.comments.filter(comment => {\n          return comment.comment_id !== id;\n        });\n        return {\n          comments: filtered\n        };\n      });\n    };\n  }\n\n  componentDidMount() {\n    const articleId = this.props.articleId;\n    api.getArticleComments(articleId).then(res => this.setState({\n      comments: res.data.comments,\n      isLoading: false\n    }));\n  }\n\n  render() {\n    if (this.state.isLoading === true) {\n      return React.createElement(Loading, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      });\n    }\n\n    const articleId = this.props.articleId;\n    return React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Comments: \"), React.createElement(CommentAdder, {\n      user: this.props.user,\n      submitComment: this.submitComment,\n      articleId: articleId,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), this.state.comments.map(comment => React.createElement(\"li\", {\n      key: comment.comment_id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(CommentCard, {\n      articleId: articleId,\n      comment: comment,\n      user: this.props.user,\n      removeComment: this.removeComment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default CommentFetcher;","map":{"version":3,"sources":["/Users/rosemullan/Desktop/NorthCoders/Front-End/fe-nc-news-1/src/Components/CommentFetcher.jsx"],"names":["React","Component","api","Loading","CommentCard","CommentAdder","CommentFetcher","state","comments","isLoading","submitComment","comment","created_at","Date","toDateString","setState","currentState","newComment","comment_id","author","username","article_id","props","votes","body","removeComment","id","filtered","filter","componentDidMount","articleId","getArticleComments","then","res","data","render","user","map"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport * as api from \"./Api\";\nimport Loading from \"./Loading\";\nimport CommentCard from \"./CommentCard\";\nimport CommentAdder from \"./CommentAdder\";\n\nclass CommentFetcher extends Component {\n  state = {\n    comments: [],\n    isLoading: true\n  };\n\n  componentDidMount() {\n    const { articleId } = this.props;\n    api\n      .getArticleComments(articleId)\n      .then(res =>\n        this.setState({ comments: res.data.comments, isLoading: false })\n      );\n  }\n  submitComment = comment => {\n    const created_at = new Date().toDateString\n    this.setState(currentState => {\n      const newComment = {\n        comment_id: 0,\n        author: comment.username,\n        article_id: this.props.article_id,\n        votes: 0,\n        created_at,\n        body: comment.body\n      };\n      return { comments: [newComment, ...currentState.comments] };\n    });\n  };\n  removeComment = id => {\n    this.setState(currentState => {\n      const filtered = currentState.comments.filter(comment => {\n        return comment.comment_id !== id;\n      });\n      return { comments: filtered };\n    });\n  };\n\n  render() {\n    if (this.state.isLoading === true) {\n      return <Loading />;\n    }\n    const { articleId } = this.props;\n\n    return (\n      <ul>\n        <h2>Comments: </h2>\n        <CommentAdder\n          user={this.props.user}\n          submitComment={this.submitComment}\n          articleId={articleId}\n        />\n        {this.state.comments.map(comment => (\n          <li key={comment.comment_id}>\n            <CommentCard\n              articleId={articleId}\n              comment={comment}\n              user={this.props.user}\n              removeComment={this.removeComment}\n            />\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nexport default CommentFetcher;\n"]},"metadata":{},"sourceType":"module"}